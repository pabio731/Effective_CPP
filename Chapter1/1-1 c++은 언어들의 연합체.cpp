

/* 
	C++은 절차적 프로그래밍을 기본으로 하여 객체지향  프로그래밍, 함수식, 일반화, 메타프로그래밍까지 가능하기 때문에
	엄청난 유연성을 가지지만 그만큼 복잡하고 혼동을 줄 수 있다. 따라서 크게 구분지어 하나씩 이해해가는 방법이
	좋을 수 있다.
	크게 네 가지 부분으로 나눌 수 있는데, 

	C :				C++의 기반이자 기초. 기본적인 규칙이라 할 수 있다.
	객체지향 개념 : 클래스와 관련된 개념들. 그리고 객체지향특징(캡슐화, 다형성, 상속성, 추상화)과 규칙
	템플릿 C++ :	일반화 프로그래밍. 새로운 프로그래밍 패러다임 "템플릿 메타프로그래밍(TMP)" 
	STL :			템플릿 라이브러리. 사용을 위한 규약.

	이렇게 다양한 부분들이 있기 때문에 드러나는 특징의 예로 Call by Value와 Call by Reference 간의 효율차이가 있다.
	C에서는 값의 전달이 효율 더 좋다고 여겨지는 반면 객체 지향 개념에서는 참조에 의한 전달이 더 좋게 여겨진다.
	그런데 STL에서는 다시 또 값 전달의 힘이 좋아진다.

*/